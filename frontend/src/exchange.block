    *

// ut ticket exchange

// custom view types
!event-item
    init
        {
            var block = Block('block');
            block
                .key('detail_height', '115')
                .css({
                    width: '100%',
                    height: 'auto',
                    borderRadius: '3px',
                    backgroundColor: 'white',
                    border: '1px solid #f2f2f2',
                    margin: '0 auto 0.7px auto',
                })
                .add(Block('div', 'content')
                    .css({
                        height: '45px',
                        width: '100%',
                        margin: '0 auto',
                        boxSizing: 'border-box',
                        position: 'relative',
                        borderRadius: '3px'
                    })
                    .add(Block('block', 'img')
                        .css({
                            height: '45px',
                            width: '45px',
                            position: 'absolute',
                            top: '-1px',
                            left: '10px'
                        })
                        .add(Block('image', 1)
                            .data({
                                src: '/img/event_b.png',
                                height: '24px',
                                width: '24px',
                                css: {
                                    margin: '0 auto',
                                    opacity: '0.75'
                                }
                            })
                        )
                    )
                    .add(Block('block', 'fill')
                        .__child('content')
                            .css('text-align', 'left')
                            .__parent()
                        .css({
                            fontSize: '15px',
                            letterSpacing: '-0.1px',
                            //fontWeight: '300',
                            fontWeight: '400',
                        })
                        .key('date_text_size', '16px')
                        .query('window width >= 1365', function (event, block, data) {
                            block.css('font-size', '14px');
                            block.key('date_text_size', '15px');
                        })
                        .query('window width < 1365', function (event, block, data) {
                            block.css('font-size', '12px');
                            block.key('date_text_size', '14px');
                        })
                        .query('window width < 1150', function (event, block, data) {
                            block.css('font-size', '10px');
                            block.key('date_text_size', '12px');
                        })
                        .query('window width < 935', function (event, block, data) {
                            block.css('font-size', '14px');
                            block.key('date_text_size', '15px');
                        })
                        .query('window width < 650', function (event, block, data) {
                            block.css('font-size', '12px');
                            block.key('date_text_size', '14px');
                        })
                        .query('window width < 500', function (event, block, data) {
                            block.css('font-size', '10px');
                            block.key('date_text_size', '12px');
                        })
                        .add(Block('text', 1)
                            .css({
                                paddingLeft: '60px',
                                paddingRight: '40px',
                                cursor: 'pointer'
                            })
                            .html('_')
                            .on('click', (e, b, d) => {
                                b.parent(2).on('toggle_showing');
                                e.stopPropagation();
                            })
                        )
                        .on('update', (e, b, d) => {
                            var event_summary_text = `<span style='font-weight: 600; font-size: ${block.key('date_text_size')};'>${block.key('date_short')}</span>&nbsp;&nbsp;â€“&nbsp;&nbsp;${block.key('gender_short')} ${block.key('sport')} ${block.key('playing')} @ ${block.key('location') && (block.key('location').city + ', ' + block.key('location').state)}`;
                            b.child('text').html(event_summary_text);
                        })
                        .on('update')
                    )
                    .add(Block('block', 'arrow')
                        .css({
                            height: '45px',
                            width: '45px',
                            position: 'absolute',
                            top: '0px',
                            right: '4px'
                        })
                        .add(Block('image', 1)
                            .data({
                                src: '/img/right_b.png',
                                height: '28px',
                                width: '28px',
                                css: {
                                    margin: '0 auto',
                                    opacity: '0.75',
                                    transform: 'rotate(180deg)',
                                    transition: 'transform 0.15s ease',
                                    cursor: 'pointer'
                                }
                            })
                            .on('click', (e, b, d) => {
                                b.parent(2).on('toggle_showing');
                                e.stopPropagation();
                            })
                        )
                    )
                )
                .add(Block('div', 'detail')
                    .css({
                        display: 'none',
                        height: '1px',
                        width: '100%',
                        transition: 'height 0.15s ease',
                        textAlign: 'left',
                        boxSizing: 'border-box',
                        padding: '0 35px',
                        fontSize: '13px',
                        letterSpacing: '0.8px',
                        overflow: 'hidden',
                        lineHeight: '18px',
                        fontWeight: '300',
                        position: 'relative'
                    })
                    .add(Block('div', 'what')
                        .add(Block('text', 'label')
                            .html('What:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('G Sport (Name)')
                            .css('font-size', '11px')
                        )
                        .on('update', (e, b, d) => {
                            b.child('text').html('').data(`${block.key('gender_short')} ${block.key('sport')} (${block.key('name')})`);
                        })
                    )
                    .add(Block('div', 'who')
                        .add(Block('text', 'label')
                            .html('Who:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('Team vs Team')
                            .css('font-size', '12px')
                        )
                    )
                    .add(Block('div', 'where')
                        .add(Block('text', 'label')
                            .html('Where:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('City, ST (Venue)')
                            .css('font-size', '11px')
                        )
                        .on('update', (e, b, d) => {
                            b.child('text').html('').data(`${block.key('location').city}, ${block.key('location').state} (${block.key('location').venue})`);
                        })
                    )
                    .add(Block('div', 'when')
                        .add(Block('text', 'label')
                            .html('When:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('HH:MM @ MM/DD/YYYY')
                            .css('font-size', '12px')
                        )
                        .on('update', (e, b, d) => {
                            b.child('text').html('').data(`${block.key('time_standard')} ${block.key('timezone')} @ ${block.key('date')}`);
                        })
                    )
                    .add(Block('div', 'seats')
                        .css('display', 'none')
                        .add(Block('text', 'label')
                            .html('Seats:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('00')
                            .css('font-size', '12px')
                        )
                    )
                    .add(Block('div', 'price')
                        .css({
                            marginTop: '5px',
                            height: '24px',
                        })
                        .add(Block('div', 'label_wrap')
                            .css({
                                width: '50%',
                                textAlign: 'left',
                                verticalAlign: 'bottom',
                                display: 'inline-block'
                            })
                            .add(Block('text', 'label')
                                .key('text_val_long', 'Last Available Price:&nbsp;')
                                .key('text_val_short', 'Last Price:&nbsp;')
                                .html('Last Available Price:&nbsp;')
                                .css({
                                    width: 'auto',
                                })
                                .class('event-detail-label')
                                .query('window width > 1300', function (event, block, data) {
                                    block.html(block.key('text_val_long'));
                                })
                                .query('window width <= 1300', function (event, block, data) {
                                    block.html(block.key('text_val_short'));
                                })
                                .query('window width <= 935', function (event, block, data) {
                                    block.html(block.key('text_val_long'));
                                })
                                .query('window width <= 600', function (event, block, data) {
                                    block.html(block.key('text_val_short'));
                                })
                            )
                        )
                        .add(Block('block', 'hr_wrap')
                            .css({
                                display: 'none'
                            })
                            .add(Block('hr', 1)
                                .css({
                                    width: '100%',
                                    opacity: '0.5',
                                })
                            )
                        )
                        .add(Block('div', 'value_wrap')
                            .css({
                                textAlign: 'right',
                                width: '50%',
                                verticalAlign: 'bottom',
                                display: 'inline-block',
                                fontStyle: 'italic'
                            })
                            .add(Block('text', 1)
                                .data('$â€“â€“.â€“â€“')
                                .css({
                                    fontSize: '19px',
                                    fontWeight: '500',
                                })
                            )
                        )
                    )
                    .add(Block('block', 'select_button')
                        .class('exchange-orange_button')
                        .css({
                            position: 'absolute',
                            top: '0',
                            right: '35px',
                            bottom: '55px',
                            height: 'calc(100% - 55px)',
                            width: 'auto',
                            minWidth: '117px',
                        })
                        .add(Block('button', 1)
                            .html('Select')
                            .css({
                                textTransform: 'lowercase',
                                height: '42px',
                                width: '117px',
                                fontSize: '20px',
                                color: 'white',
                                backgroundColor: 'rgb(191, 87, 0)',
                                border: '1px solid rgb(186, 102, 47)',
                                borderRadius: '4px',
                                letterSpacing: '2px',
                                fontWeight: '400',
                            })
                            .on('click', function (e, b, d) {
                                console.log('select', block.key('id'));
                                var ts_click = Date.now();
                                var event = {
                                    id: block.key('id'),
                                    sport: block.key('sport'),
                                    playing: block.key('playing'),
                                    location: block.key('location'),
                                    date: block.key('date'),
                                    date_short: block.key('date_short'),
                                    time: block.key('time'),
                                    time_standard: block.key('time_standard'),
                                    timezone: block.key('timezone'),
                                    name: block.key('name'),
                                    gender: block.key('gender'),
                                    gender_short: block.key('gender_short'),
                                    ticket: block.key('ticket')
                                };
                                console.log(event);
                                if (block.key('mode') == 'buy') {
                                    var event_summary_text = `${event.date_short} ${event.gender_short} ${event.sport} ${event.playing} @ ${event.location.city + ', ' + event.location.state}`;
                                    window.ex.ui_modal.new_buy_order(ts_click, event.id, event_summary_text, event);
                                } else {
                                    block.parent(1).sibling('sell_form').child('form_wrap/form_content/event').data({
                                        event: event
                                    });
                                }
                            })
                        )
                    )
                )
                .key('showing', 'no')
                .on('toggle_showing', (e, b, d) => {
                    if (block.key('showing') === 'yes')
                        block.on('hide');
                    else {
                        block.on('show');
                        setTimeout(_ => {
                            var $parent = block.parent().$();
                            //$parent.animate({
                            //    scrollTop: block.$().offset().top - $parent.offset().top - 10
                            //});
                        }, 300);
                    }
                    e.stopPropagation();
                })
                .on('hide', (e, b, d) => {
                    block.child('content/arrow/image').css('transform', 'rotate(180deg)');
                    block.child('detail').css('height', '1px');
                    setTimeout(_ => { block.child('detail').css('display', 'none'); }, 170);
                    block.css('margin-bottom', '0.7px');
                    block.key('showing', 'no');
                    block.parent(1).key('event_open').splice(block.parent(1).key('event_open').indexOf(block.key('id')), 1);
                    e.stopPropagation();
                })
                .on('show', (e, b, d) => {
                    block.child('content/arrow/image').css('transform', 'rotate(90deg)');
                    block.child('detail').css('display', 'block');
                    setTimeout(_ => { block.child('detail').css('height', `${block.key('detail_height')}px`); }, 10);
                    block.css('margin-bottom', '4px');
                    block.key('showing', 'yes');
                    block.parent(1).key('event_open').push(`${block.key('id')}`);
                    e.stopPropagation();
                })
            ;
            return block;
        }
    load
        {
            data('_id', id => {
                block.key('id', id);
            });
            data('date', date => {
                block.key('date', date);
                var date_short = date.split('-').slice(1).join('-');
                block.key('date_short', date_short);
                block.child('content/fill/text').on('update');
                block.child('detail/when').on('update');
            });
            data('time', time => {
                block.key('time', time);
                var hrs = parseInt(time.split(':')[0]);
                var min = parseInt(time.split(':')[1]);
                var mode = 'am';
                if (hrs >= 12) mode = 'pm';
                hrs = hrs % 12 || 12;
                var time_standard = `${hrs}:${min < 10 ? '0' : ''}${min}${mode}`;
                block.key('time_standard', time_standard);
                block.child('detail/when').on('update');
            });
            data('gender', gender => {
                block.key('gender', gender);
                var gender_short = `${gender[0]}`;
                block.key('gender_short', gender_short);
                block.child('content/fill/text').on('update');
                block.child('detail/what').on('update');
            });
            data('sport', sport => {
                block.key('sport', sport);
                block.child('content/fill/text').on('update');
                block.child('detail/what').on('update');
            });
            data('playing', playing => {
                block.key('playing', playing);
                block.child('detail/who/text').html('').data(playing);
                block.child('content/fill/text').on('update');
            });
            data('location', location => {
                block.key('location', location);
                block.child('content/fill/text').on('update');
                block.child('detail/where/text').on('update');
            });
            data('name', name => {
                block.key('name', name);
                block.child('detail/what').on('update');
            });
            data('timezone', timezone => {
                block.key('timezone', timezone);
                block.child('detail/when').on('update');
            });
            data('mode', mode => {
                block.key('mode', mode);
                var button_text = mode == 'buy' ? 'buy' : 'select';
                block.child('detail/select_button/button').html(utils.capitalize(button_text));
                block.child('detail/seats').css('display', (mode == 'buy' ? 'block' : 'none'));
                block.key('detail_height', mode == 'buy' ? 134 : 115);
                setTimeout(_ => { Block.queries(); }, 10);
            });
            data('ticket', ticket => {
                block.key('ticket', ticket);
                if (ticket.price === 0 || ticket.sell_order === null) {
                    block.child('detail/seats/text').html('').data('00');
                    block.child('detail/price/value_wrap/text').html('').data(`$â€“â€“.â€“â€“`);
                } else {
                    block.child('detail/seats/text').html('').data(`${ticket.seats}`);
                    block.child('detail/price/value_wrap/text').html('').data(`$${ticket.price.toFixed(2)}`);
                }
            });
        }

!order-item
    init
        {
            var block = Block('block');
            block
                .key('detail_height', '115')
                .css({
                    width: '100%',
                    height: 'auto',
                    borderRadius: '3px',
                    backgroundColor: 'white',
                    border: '1px solid #f2f2f2',
                    margin: '0 auto 0.7px auto',
                })
                .add(Block('div', 'content')
                    .css({
                        height: '45px',
                        width: '100%',
                        margin: '0 auto',
                        boxSizing: 'border-box',
                        position: 'relative',
                        borderRadius: '3px'
                    })
                    .add(Block('block', 'img')
                        .css({
                            height: '45px',
                            width: '45px',
                            position: 'absolute',
                            top: '-1px',
                            left: '10px'
                        })
                        .add(Block('image', 1)
                            .data({
                                src: '/img/event_b.png',
                                height: '24px',
                                width: '24px',
                                css: {
                                    margin: '0 auto',
                                    opacity: '0.75'
                                }
                            })
                        )
                    )
                    .add(Block('block', 'fill')
                        .__child('content')
                            .css('text-align', 'left')
                            .__parent()
                        .css({
                            fontSize: '15px',
                            letterSpacing: '-0.1px',
                            //fontWeight: '300',
                            fontWeight: '400',
                        })
                        .key('date_text_size', '16px')
                        .query('window width >= 1365', function (event, block, data) {
                            block.css('font-size', '14px');
                            block.key('date_text_size', '15px');
                        })
                        .query('window width < 1365', function (event, block, data) {
                            block.css('font-size', '12px');
                            block.key('date_text_size', '14px');
                        })
                        .query('window width < 1150', function (event, block, data) {
                            block.css('font-size', '10px');
                            block.key('date_text_size', '12px');
                        })
                        .query('window width < 935', function (event, block, data) {
                            block.css('font-size', '14px');
                            block.key('date_text_size', '15px');
                        })
                        .query('window width < 650', function (event, block, data) {
                            block.css('font-size', '12px');
                            block.key('date_text_size', '14px');
                        })
                        .query('window width < 500', function (event, block, data) {
                            block.css('font-size', '10px');
                            block.key('date_text_size', '12px');
                        })
                        .add(Block('text', 1)
                            .css({
                                paddingLeft: '60px',
                                paddingRight: '40px',
                                cursor: 'pointer'
                            })
                            .html('_')
                            .on('click', (e, b, d) => {
                                b.parent(2).on('toggle_showing');
                                e.stopPropagation();
                            })
                        )
                        .on('update', (e, b, d) => {
                            var event_summary_text = `<span style='font-weight: 600; font-size: ${block.key('date_text_size')};'>${block.key('date_short')}</span>&nbsp;&nbsp;â€“&nbsp;&nbsp;${block.key('gender_short')} ${block.key('sport')} ${block.key('playing')} @ ${block.key('location') && (block.key('location').city + ', ' + block.key('location').state)}`;
                            b.child('text').html(event_summary_text);
                        })
                        .on('update')
                    )
                    .add(Block('block', 'arrow')
                        .css({
                            height: '45px',
                            width: '45px',
                            position: 'absolute',
                            top: '0px',
                            right: '4px'
                        })
                        .add(Block('image', 1)
                            .data({
                                src: '/img/right_b.png',
                                height: '28px',
                                width: '28px',
                                css: {
                                    margin: '0 auto',
                                    opacity: '0.75',
                                    transform: 'rotate(180deg)',
                                    transition: 'transform 0.15s ease',
                                    cursor: 'pointer'
                                }
                            })
                            .on('click', (e, b, d) => {
                                b.parent(2).on('toggle_showing');
                                e.stopPropagation();
                            })
                        )
                    )
                )
                .add(Block('div', 'detail')
                    .css({
                        display: 'none',
                        height: '1px',
                        width: '100%',
                        transition: 'height 0.15s ease',
                        textAlign: 'left',
                        boxSizing: 'border-box',
                        padding: '0 35px',
                        fontSize: '13px',
                        letterSpacing: '0.8px',
                        overflow: 'hidden',
                        lineHeight: '18px',
                        fontWeight: '300',
                        position: 'relative'
                    })
                    .add(Block('div', 'what')
                        .add(Block('text', 'label')
                            .html('What:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('G Sport (Name)')
                            .css('font-size', '11px')
                        )
                        .on('update', (e, b, d) => {
                            b.child('text').html('').data(`${block.key('gender_short')} ${block.key('sport')} (${block.key('name')})`);
                        })
                    )
                    .add(Block('div', 'who')
                        .add(Block('text', 'label')
                            .html('Who:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('Team vs Team')
                            .css('font-size', '12px')
                        )
                    )
                    .add(Block('div', 'where')
                        .add(Block('text', 'label')
                            .html('Where:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('City, ST (Venue)')
                            .css('font-size', '11px')
                        )
                        .on('update', (e, b, d) => {
                            b.child('text').html('').data(`${block.key('location').city}, ${block.key('location').state} (${block.key('location').venue})`);
                        })
                    )
                    .add(Block('div', 'when')
                        .add(Block('text', 'label')
                            .html('When:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('HH:MM @ MM/DD/YYYY')
                            .css('font-size', '12px')
                        )
                        .on('update', (e, b, d) => {
                            b.child('text').html('').data(`${block.key('time_standard')} ${block.key('timezone')} @ ${block.key('date')}`);
                        })
                    )
                    .add(Block('div', 'seats')
                        .css('display', 'none')
                        .add(Block('text', 'label')
                            .html('Seats:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('text', 1)
                            .data('00')
                            .css({
                                fontSize: '12px',
                                fontWeight: 'bold',
                            })
                        )
                    )
                    .add(Block('div', 'email')
                        .add(Block('text', 'label')
                            .html('Email:&nbsp;')
                            .class('event-detail-label')
                        )
                        .add(Block('a', 'text')
                            .html('email@utexas.edu')
                            .attribute('href', '#')
                            .css({
                                fontSize: '12px',
                                fontWeight: 'bold',
                            })
                        )
                    )
                    .add(Block('div', 'price')
                        .css({
                            marginTop: '5px',
                            height: '24px',
                        })
                        .add(Block('div', 'label_wrap')
                            .css({
                                width: '50%',
                                textAlign: 'left',
                                verticalAlign: 'bottom',
                                display: 'inline-block'
                            })
                            .add(Block('text', 'label')
                                .key('text_val_long', 'Your Ticket Price:&nbsp;')
                                .key('text_val_short', 'Your Price:&nbsp;')
                                .html('Your Price:&nbsp;')
                                .css({
                                    width: 'auto',
                                })
                                .class('event-detail-label')
                                .query('window width > 1300', function (event, block, data) {
                                    block.html(block.key('text_val_long'));
                                })
                                .query('window width <= 1300', function (event, block, data) {
                                    block.html(block.key('text_val_short'));
                                })
                                .query('window width <= 935', function (event, block, data) {
                                    block.html(block.key('text_val_long'));
                                })
                                .query('window width <= 600', function (event, block, data) {
                                    block.html(block.key('text_val_short'));
                                })
                            )
                        )
                        .add(Block('block', 'hr_wrap')
                            .css({
                                display: 'none'
                            })
                            .add(Block('hr', 1)
                                .css({
                                    width: '100%',
                                    opacity: '0.5',
                                })
                            )
                        )
                        .add(Block('div', 'value_wrap')
                            .css({
                                textAlign: 'right',
                                width: '50%',
                                verticalAlign: 'bottom',
                                display: 'inline-block',
                                fontStyle: 'italic'
                            })
                            .add(Block('text', 1)
                                .data('$â€“â€“.â€“â€“')
                                .css({
                                    fontSize: '19px',
                                    fontWeight: '500',
                                })
                            )
                        )
                    )
                    .add(Block('block', 'select_button')
                        .class('exchange-orange_button')
                        .css({
                            position: 'absolute',
                            right: '10px',
                            bottom: '20px',
                            height: 'calc(100% - 55px)',
                            width: 'auto',
                            minWidth: '117px',
                        })
                        .on('enable', (e, b, d) => {
                            b.child('button').css('opacity', '1').css('pointer-events', 'auto').html(d.title);
                        })
                        .on('disable', (e, b, d) => {
                            b.child('button').css('opacity', '0.5').css('pointer-events', 'none').html(d.title);
                        })
                        .add(Block('button', 1)
                            .html('Select')
                            .css({
                                textTransform: 'lowercase',
                                height: '30px',
                                width: '80px',
                                fontSize: '14px',
                                color: 'white',
                                backgroundColor: 'rgb(191, 87, 0)',
                                border: '1px solid rgb(186, 102, 47)',
                                borderRadius: '4px',
                                letterSpacing: '2px',
                                fontWeight: '400',
                            })
                            .on('click', function (e, b, d) {
                                console.log('select', block.key('id'));
                                var ts_click = Date.now();
                                var event = {
                                    id: block.key('id'),
                                    sport: block.key('sport'),
                                    playing: block.key('playing'),
                                    location: block.key('location'),
                                    date: block.key('date'),
                                    date_short: block.key('date_short'),
                                    time: block.key('time'),
                                    time_standard: block.key('time_standard'),
                                    timezone: block.key('timezone'),
                                    name: block.key('name'),
                                    gender: block.key('gender'),
                                    gender_short: block.key('gender_short'),
                                    ticket: block.key('ticket')
                                };
                                if (block.key('mode') == 'buy') {
                                    var event_summary_text = `${event.date_short} ${event.gender_short} ${event.sport} ${event.playing} @ ${event.location.city + ', ' + event.location.state}`;
                                    //window.ex.ui_modal.new_buy_order(ts_click, event.id, event_summary_text, event);
                                    console.log('show seller contact info', event_summary_text, event);
                                    // TODO: show seller contact info, cancel button too
                                    console.log('open modal for seller contact info');
                                } else {
                                    if (block.key('locked') === true) {
                                        // TODO: manage ticket
                                        // TODO: (contact buyer, confirm sale, and remove)
                                        console.log('open modal to manage ticket (contact buyer, confirm sale, or remove)');
                                    } else {
                                        // TODO: add option to remove the listing
                                        // do nothing
                                    }
                                }
                            })
                        )
                    )
                )
                .key('showing', 'no')
                .on('toggle_showing', (e, b, d) => {
                    if (block.key('showing') === 'yes')
                        block.on('hide');
                    else {
                        block.on('show');
                        setTimeout(_ => {
                            var $parent = block.parent().$();
                            //$parent.animate({
                            //    scrollTop: block.$().offset().top - $parent.offset().top - 10
                            //});
                        }, 300);
                    }
                    e.stopPropagation();
                })
                .on('hide', (e, b, d) => {
                    block.child('content/arrow/image').css('transform', 'rotate(180deg)');
                    block.child('detail').css('height', '1px');
                    setTimeout(_ => { block.child('detail').css('display', 'none'); }, 170);
                    block.css('margin-bottom', '0.7px');
                    block.key('showing', 'no');
                    //block.parent(1).key('event_open').splice(block.parent(1).key('event_open').indexOf(block.key('id')), 1);
                    e.stopPropagation();
                })
                .on('show', (e, b, d) => {
                    block.child('content/arrow/image').css('transform', 'rotate(90deg)');
                    block.child('detail').css('display', 'block');
                    setTimeout(_ => { block.child('detail').css('height', `${block.key('detail_height')}px`); }, 10);
                    block.css('margin-bottom', '4px');
                    block.key('showing', 'yes');
                    //block.parent(1).key('event_open').push(`${block.key('id')}`);
                    e.stopPropagation();
                })
            ;
            return block;
        }
    load
        {
            data('_id', id => {
                block.key('id', id);
            });
            data('event_id', event_id => {
                block.key('event_id', event_id);
            });
            data('date', date => {
                block.key('date', date);
                var date_short = date.split('-').slice(1).join('-');
                block.key('date_short', date_short);
                block.child('content/fill/text').on('update');
                block.child('detail/when').on('update');
            });
            data('time', time => {
                block.key('time', time);
                var hrs = parseInt(time.split(':')[0]);
                var min = parseInt(time.split(':')[1]);
                var mode = 'am';
                if (hrs >= 12) mode = 'pm';
                hrs = hrs % 12 || 12;
                var time_standard = `${hrs}:${min < 10 ? '0' : ''}${min}${mode}`;
                block.key('time_standard', time_standard);
                block.child('detail/when').on('update');
            });
            data('gender', gender => {
                block.key('gender', gender);
                var gender_short = `${gender[0]}`;
                block.key('gender_short', gender_short);
                block.child('content/fill/text').on('update');
                block.child('detail/what').on('update');
            });
            data('sport', sport => {
                block.key('sport', sport);
                block.child('content/fill/text').on('update');
                block.child('detail/what').on('update');
            });
            data('playing', playing => {
                block.key('playing', playing);
                block.child('detail/who/text').html('').data(playing);
                block.child('content/fill/text').on('update');
            });
            data('location', location => {
                block.key('location', location);
                block.child('content/fill/text').on('update');
                block.child('detail/where/text').on('update');
            });
            data('name', name => {
                block.key('name', name);
                block.child('detail/what').on('update');
            });
            data('timezone', timezone => {
                block.key('timezone', timezone);
                block.child('detail/when').on('update');
            });
            data('mode', mode => {
                block.key('mode', mode);
                var button_text = mode == 'buy' ? 'cancel' : 'unlist';
                block.child('detail/select_button/button').html(utils.capitalize(button_text));
                //block.child('detail/seats').css('display', (mode == 'buy' ? 'block' : 'none'));
                //block.key('detail_height', mode == 'buy' ? 134 : 115);
                block.child('detail/seats').css('display', (mode == 'buy' ? 'block' : 'block'));
                block.key('detail_height', mode == 'buy' ? 153 : 153);
                block.child('detail/email').child('label').html((mode == 'buy' ? 'Seller' : 'Buyer') + ':&nbsp;');
                setTimeout(_ => { Block.queries(); }, 10);
            });
            data('ticket', ticket => {
                block.key('ticket', ticket);
                if (ticket.price === 0 || ticket.sell_order === null) {
                    block.child('detail/seats/text').html('').data('00');
                    block.child('detail/price/value_wrap/text').html('').data(`$â€“â€“.â€“â€“`);
                } else {
                    block.child('detail/seats/text').html('').data(`${ticket.seats}`);
                    block.child('detail/price/value_wrap/text').html('').data(`$${ticket.price.toFixed(2)}`);
                }
            });
            data('locked', locked => {
                block.key('locked', locked);
                /*
                if (locked) {
                    block.child('detail/select_button').on('enable', {
                        title: 'manage'
                    });
                } else {
                    block.child('detail/select_button').on('disable', {
                        title: 'waiting'
                    });
                }
                */
            });
            data('sell_order_match_email', seller_email => {
                block.key('seller_email', seller_email);
                block.child('detail/email/text').html(seller_email).attribute('href', `mailto:${seller_email}`);
            });
            data('buy_order_match_email', buyer_email => {
                block.key('buyer_email', buyer_email);
                block.child('detail/email/text').html(buyer_email).attribute('href', `mailto:${buyer_email}`);
            });
        }


// exchange client ui view tree

exchange
    css
        opacity 1
        //transition opacity 0.3s ease
        transition none
        display block
        margin-top 80px
        width 100%
        margin-left auto
        margin-right auto
    :show
        css
            opacity 1
    :hide
        css
            opacity 0
    @query window height != 0
        {
            var h = window.innerHeight - 80 - 10;
            if (window.innerWidth <= 935) h = h * 1.8;
            block.css('height', `${h}px`);
        }
    @query window width > 1600
        css
            width 83%
    @query window width <= 1600
        css
            width 87%
    @query window width <= 1400
        css
            width 90%
    @query window width <= 1200
        css
            width 95%
    @query window width <= 1000
        css
            width 100%
    block left
        css
            height 95%
            width 50%
            display inline-table
        @query window width > 935
            css
                width 50%
                height 95%
        @query window width <= 935
            css
                width 100%
                height 50%
        div panel
            class exchange-panel
            @query window width > 1600
                css
                    width 85%
            @query window width <= 1600
                css
                    width 90%
            @query window width <= 1400
                css
                    width 90%
            @query window width <= 1000
                css
                    width 95%
            div title
                css
                    padding-top 40px
                    height 105px
                h1 text
                    html Buy
                    css
                        text-transform uppercase
                        font-size 44px
                        color #333
                        letter-spacing 5px
            {
                var wrap = Block('div');
                block.__add(wrap).setAdd(wrap);
                wrap.query('window width != 0', function (event, block, data) {
                    block.css('height', (block.__parent().$().height() - 100 - 25) + 'px');
                });
            }
            div events
                {
                    block.key('event_open', []);
                }
                :refresh
                    {
                        block.child('date_selector/input').on('get_events');
                    }
                css
                    width 100%
                    height 56%
                    position relative
                div title
                    css
                        padding-left 42px
                        text-align left
                    text text
                        val Events
                        css
                            font-size 24px
                            letter-spacing 2px
                block date_all_selector
                    css
                        position absolute
                        top -4px
                        height 28px
                        width 45px
                    @query window width != 0
                        {
                            block.css('right', (block.sibling('date_selector').$().width() + 5 + 44) + 'px');
                        }
                    div wrap
                        css
                            height 18px
                            width 45px
                            margin 0 auto
                        label label
                            for all_input
                            html ALL&nbsp;
                            css
                                position relative
                                top -1px
                        input input
                            type checkbox
                            name all_input
                            checked checked
                            css
                                cursor pointer
                            :input
                                {
                                    var val = event.target.checked ? true : false;
                                    block.parent(1).sibling('date_selector').child('input').key('select_all', val).on('input');
                                    event.stopPropagation();
                                }
                block date_selector
                    css
                        position absolute
                        top -4px
                        height 28px
                        width 110px
                        right 42px
                    input input
                        css
                            height 22px
                            width 110px
                            cursor pointer
                        type date
                        {
                            block.key('select_all', true);
                            var ts_now = utils.ts_to_string(Date.now());
                            block.attribute('value', ts_now);
                            setTimeout(_ => {
                                block.key('select_date', 'all');
                                block.on('get_events');
                            }, 20);
                        }
                        :input
                            {
                                var select_date = block.node().value;
                                if (block.key('select_all') === true)
                                    select_date = 'all';
                                block.key('select_date', select_date);
                                console.log('select buy panel event search date: ' + select_date);
                                block.on('get_events');
                                event.stopPropagation();
                            }
                        :get_events
                            {
                                window.ex.api.get_events(block.key('select_date'), (result, e) => {
                                    if (result) {
                                        if (result.events) {
                                            console.log('reloaded events', result.events);
                                            block.parent().sibling('content').data({
                                                events: result.events
                                            });
                                            Block.queries();
                                            setTimeout(_ => {
                                                Block.queries();
                                            }, 50);
                                        }
                                    } else console.log(e);
                                });
                                event.stopPropagation();
                            }
                div content
                    class exchange-panel-content
                    #events
                        {
                            block.html('');
                            var events_filtered = [];
                            for (var e in events) {
                                if (events[e].ticket.sell_order != null) 
                                    events_filtered.push(events[e]);
                            }
                            if (events.length == 0) {
                                var no_events_placeholder_text = "No events listed.";
                                block.add(Block('div', 'placeholder_wrap').css({fontStyle:'italic',paddingTop:'10px',opacity:'0.9'}).add(Block('text', 1).data(`${no_events_placeholder_text}`)));
                            } else if (events_filtered.length == 0) {
                                var no_events_placeholder_text = "No events available.";
                                block.add(Block('div', 'placeholder_wrap').css({fontStyle:'italic',paddingTop:'10px',opacity:'0.9'}).add(Block('text', 1).data(`${no_events_placeholder_text}`)));
                            } else {
                                for (var e in events_filtered) {
                                    block.add(Block('event-item', `event_${events_filtered[e]._id}`).data({mode:'buy'}).data(events_filtered[e]));
                                }
                            }
                        }
            div orders
                css
                    width 100%
                    height 44%
                {
                    setTimeout(_ => {
                        block.on('refresh');
                    }, 20);
                }
                :refresh
                    {
                        console.log('loading buy orders');
                        window.ex.api.get_buy_orders((result, e) => {
                            if (result) {
                                if (result.orders) {
                                    console.log('reloaded buy_orders', result.orders);
                                    block.child('content').data({
                                        orders: result.orders
                                    });
                                    Block.queries();
                                    setTimeout(_ => {
                                        Block.queries();
                                    }, 50);
                                }
                            } else console.log(e);
                        });
                        event.stopPropagation();
                    }
                div title
                    css
                        padding-left 42px
                        text-align left
                    text text
                        val Orders
                        css
                            font-size 24px
                            letter-spacing 2px
                div content
                    class exchange-panel-content
                    #orders
                        {
                            block.html('');
                            if (orders.length == 0) {
                                var no_orders_placeholder_text = "No buy orders.";
                                block.add(Block('div', 'placeholder_wrap').css({fontStyle:'italic',paddingTop:'10px',opacity:'0.9'}).add(Block('text', 1).data(`${no_orders_placeholder_text}`)));
                            } else {
                                for (var o in orders) {
                                    var order_obj = JSON.parse(JSON.stringify(orders[o]));
                                    var event_obj = JSON.parse(JSON.stringify(order_obj.event_obj));
                                    delete order_obj['event_obj'];

                                    event_obj.event_id = event_obj._id;
                                    delete event_obj['_id'];
                                    event_obj.event_creator = event_obj.creator;
                                    delete event_obj['creator'];
                                    event_obj.event_ts_created = event_obj.ts_created;
                                    delete event_obj['ts_created'];
                                    event_obj.event_ts_updated = event_obj.ts_updated;
                                    delete event_obj['ts_updated'];
                                    event_obj.event_comments = event_obj.comments;
                                    delete event_obj['comments'];

                                    block.add(Block('order-item', `order_${orders[o]._id}`).data({mode:'buy'}).data(order_obj).data(event_obj));
                                }
                            }
                        }
                    
    block right
        css
            height 95%
            width 50%
            margin-top 0
            display inline-table
        @query window width > 935
            css
                width 50%
                height 95%
                margin-top 0
        @query window width <= 935
            css
                width 100%
                height 50%
                margin-top -80px
        div panel
            class exchange-panel
            @query window width > 1600
                css
                    width 85%
            @query window width <= 1600
                css
                    width 90%
            @query window width <= 1400
                css
                    width 90%
            @query window width <= 1000
                css
                    width 95%
            div title
                css
                    padding-top 40px
                    height 105px
                h1 text
                    html Sell
                    css
                        text-transform uppercase
                        font-size 44px
                        color #333
                        letter-spacing 5px
            {
                var wrap = Block('div');
                block.__add(wrap).setAdd(wrap);
                wrap.query('window width != 0', function (event, block, data) {
                    block.css('height', (block.__parent().$().height() - 100 - 25) + 'px');
                });
            }
            div events
                {
                    block.key('event_open', []);
                }
                :refresh
                    {
                        block.child('date_selector/input').on('get_events');
                    }
                css
                    width 100%
                    height calc(58% - 25px)
                    position relative
                div title
                    css
                        padding-left 42px
                        text-align left
                    text text
                        val Events
                        css
                            font-size 24px
                            letter-spacing 2px
                block date_all_selector
                    css
                        position absolute
                        top -4px
                        height 28px
                        width 45px
                    @query window width != 0
                        {
                            block.css('right', (block.sibling('date_selector').$().width() + 5 + block.sibling('list_event_button').$().width() + 44 + 5) + 'px');
                        }
                    div wrap
                        css
                            height 18px
                            width 45px
                            margin 0 auto
                        label label
                            for all_input
                            html ALL&nbsp;
                            css
                                position relative
                                top -1px
                        input input
                            type checkbox
                            name all_input
                            checked checked
                            css
                                cursor pointer
                            :input
                                {
                                    var val = event.target.checked ? true : false;
                                    block.parent(1).sibling('date_selector').child('input').key('select_all', val).on('input');
                                    event.stopPropagation();
                                }
                block date_selector
                    css
                        position absolute
                        top -4px
                        height 28px
                        width 110px
                    @query window width != 0
                        {
                            block.css('right', (block.sibling('list_event_button').$().width() + 44 + 5) + 'px');
                        }
                    input input
                        css
                            height 22px
                            width 110px
                            cursor pointer
                        type date
                        {
                            block.key('select_all', true);
                            var ts_now = utils.ts_to_string(Date.now());
                            block.attribute('value', ts_now);
                            setTimeout(_ => {
                                block.key('select_date', 'all');
                                block.on('get_events');
                            }, 20);
                        }
                        :input
                            {
                                var select_date = block.node().value;
                                if (block.key('select_all') === true)
                                    select_date = 'all';
                                block.key('select_date', select_date);
                                console.log('select sell panel event search date: ' + select_date);
                                block.on('get_events');
                                event.stopPropagation();
                            }
                        :get_events
                            {
                                window.ex.api.get_events(block.key('select_date'), (result, e) => {
                                    if (result) {
                                        if (result.events) {
                                            console.log('reloaded events', result.events);
                                            block.parent().sibling('content').data({
                                                events: result.events
                                            });
                                            Block.queries();
                                            setTimeout(_ => {
                                                Block.queries();
                                            }, 50);
                                            setTimeout(_ => {
                                                var events_open_prev = block.parent(1).key('event_open');
                                                block.parent(1).key('event_open', []);
                                                if (events_open_prev) {
                                                    for (var e in events_open_prev) {
                                                        var event_id = events_open_prev[e];
                                                        var event_view = block.parent().sibling('content').child(`event_${event_id}`);
                                                        if (event_view) {
                                                            event_view.on('show');
                                                        }
                                                    }
                                                }
                                            }, 100);
                                        }
                                    } else console.log(e);
                                });
                                event.stopPropagation();
                            }
                div list_event_button
                    class exchange-orange_button
                    css
                        position absolute
                        top -4px
                        right 44px
                        width auto
                        height 28px
                    button button
                        css
                            height 100%
                            width 100%
                            background-color #BF5700
                            border-radius 4px
                            border 1px solid #BA662F
                            text-transform lowercase
                            color white
                            letter-spacing 1px
                            font-weight 400
                            padding 0 25px
                            font-size 14px
                        html List Event
                        :click
                            {
                                window.ex.ui_modal.new_event();
                            }
                div content
                    class exchange-panel-content
                    css
                        height calc(100% - 24px - 10px)
                    #events
                        {
                            block.html('');
                            if (events.length == 0) {
                                var no_events_placeholder_text = "No events listed.";
                                block.add(Block('div', 'placeholder_wrap').css({fontStyle:'italic',paddingTop:'10px',opacity:'0.9'}).add(Block('text', 1).data(`${no_events_placeholder_text}`)));
                            } else {
                                for (var e in events) {
                                    block.add(Block('event-item', `event_${events[e]._id}`).data({mode:'sell'}).data(events[e]));
                                }
                            }
                        }
            block orders_selector
                css
                    width 100%
                    height 30px
                {
                    block.key('selected', 'sell');
                }
                div selector
                    css
                        height 80%
                        width 150px
                        margin 0 auto
                        margin-top 3px
                    button left
                        css
                            width 50%
                            height 100%
                            text-transform lowercase
                            border-radius 4px 0 0 4px
                            cursor pointer
                            border 0
                            border-right 0.5px solid #e6e6e6
                            letter-spacing 0.9px
                            color #222
                        html Sell
                        class sell_tab_button_alt
                        :click
                            {
                                block.parent(1).key('selected', 'sell');
                                block.sibling('right').on('deactivate');
                                block.on('activate');
                            }
                        :activate
                            {
                                block.node().classList.remove('sell_tab_button');
                                block.class('sell_tab_button_alt');
                                block.parent(1).sibling('sell_form').on('show');
                                event.stopPropagation();
                            }
                        :deactivate
                            {
                                block.node().classList.remove('sell_tab_button_alt');
                                block.class('sell_tab_button');
                                block.parent(1).sibling('sell_form').on('hide');
                                event.stopPropagation();
                            }
                    button right
                        css
                            width 50%
                            height 100%
                            text-transform lowercase
                            border-radius 0 4px 4px 0
                            cursor pointer
                            border 0
                            border-left 0.5px solid #e6e6e6
                            letter-spacing 0.9px
                            color #222
                        html Orders
                        class sell_tab_button
                        :click
                            {
                                block.parent(1).key('selected', 'orders');
                                block.sibling('left').on('deactivate');
                                block.on('activate');
                            }
                        :activate
                            {
                                block.node().classList.remove('sell_tab_button');
                                block.class('sell_tab_button_alt');
                                block.parent(1).sibling('orders').on('show');
                                event.stopPropagation();
                            }
                        :deactivate
                            {
                                block.node().classList.remove('sell_tab_button_alt');
                                block.class('sell_tab_button');
                                block.parent(1).sibling('orders').on('hide');
                                event.stopPropagation();
                            }
            div sell_form
                css
                    width calc(100% - 42px * 1.8)
                    height calc(42% - 10px)
                    position relative
                    margin 0 auto
                :show
                    css
                        display block
                :hide
                    css
                        display none
                div form_wrap
                    css
                        width 100%
                        height calc(100% - 60px - 10px)
                    :reset_fields
                        {
                            block.child('form_content/event').on('deselect');
                            block.child('form_content/two_wrap/price/input').node().value = "";
                            block.child('form_content/two_wrap/seats/input').node().value = "";
                            block.child('form_content/two_wrap/comments/input').node().value = "";
                        }
                    div form_content
                        css
                            width calc(100% - 40px)
                            height 100%
                            margin 0 auto
                        div event
                            css
                                margin-top 2px
                                text-align left
                            #event
                                {
                                    block.key('event', event);
                                    var event_summary_text = `${event.date_short} ${event.gender_short} ${event.sport} ${event.playing} @ ${event.location.city + ', ' + event.location.state}`;
                                    block.child('value').html(`${event_summary_text}`);
                                }
                            :deselect
                                {
                                    block.key('event', null);
                                    block.child('value').html('<span class="placeholder_text">Please select an event or list a new event above.</span>');
                                }
                            text label
                                html Event:&nbsp;&nbsp;
                                css
                                    font-size 19px
                                    letter-spacing 1.5px
                                    color #111
                                    font-weight 200
                            text value
                                html <span class="placeholder_text">Please select an event or list a new event above.</span>
                                css
                                    top -1.5px
                                    position relative
                                @query window width > 1350
                                    css
                                        font-size 12px
                                        letter-spacing 0.7px
                                @query window width <= 1350
                                    css
                                        font-size 10px
                                        letter-spacing 0.6px
                                @query window width <= 1150
                                    css
                                        font-size 9px
                                        letter-spacing 0.5px
                                @query window width <= 935
                                    css
                                        font-size 12px
                                        letter-spacing 0.7px
                                @query window width <= 510
                                    css
                                        font-size 9px
                                        letter-spacing 0.5px
                                @query window width <= 430
                                    css
                                        font-size 7px
                                        letter-spacing 0.4px
                        div two_wrap
                            css
                                margin-top 8px
                                vertical-align top
                            div price
                                css
                                    width calc(50% + 10px)
                                    display inline-block
                                    text-align left
                                text label
                                    html Price:&nbsp;&nbsp;
                                    css
                                        font-size 19px
                                        letter-spacing 1.5px
                                        color #111
                                        font-weight 200
                                input input
                                    placeholder $00.00
                                    css
                                        text-align center
                                        border 1px solid #eee
                                        border-radius 2px
                                        padding 3px 5px
                                        box-sizing border-box
                                        position relative
                                        top -1.5px
                                        left -1px
                                    @query window width != 0
                                        {
                                            block.css('width', (block.parent().$().width() - block.sibling('label').$().width() - 20) + 'px');
                                        }
                            div seats
                                css
                                    width calc(50% - 10px)
                                    display inline-block
                                    text-align left
                                text label
                                    html Seats:&nbsp;&nbsp;
                                    css
                                        font-size 19px
                                        letter-spacing 1.5px
                                        color #111
                                        font-weight 200
                                input input
                                    placeholder 0F
                                    css
                                        text-align center
                                        border 1px solid #eee
                                        border-radius 2px
                                        padding 3px 5px
                                        box-sizing border-box
                                        position relative
                                        top -1.5px
                                        left -1px
                                    @query window width != 0
                                        {
                                            block.css('width', (block.parent().$().width() - block.sibling('label').$().width() - 2) + 'px');
                                        }
                            div comments
                                css
                                    margin-top 5px
                                    text-align left
                                text label
                                    html Comments:&nbsp;&nbsp;
                                    css
                                        font-size 16px
                                        letter-spacing 1.5px
                                        color #111
                                        font-weight 200
                                textarea input
                                    css
                                        margin-top 5px
                                        display block
                                        width 100%
                                        height 44px
                                        resize none
                                        border 1px solid #eee
                                        padding 3px 8px
                                        box-sizing border-box
                                        border-radius 3px
                                        font-size 12px
                                        letter-spacing 0.8px
                                    placeholder Lorem ipsum dolor sit amet...
                                    @query window width > 935
                                        {
                                            block.css('height', '53px');
                                        }
                                    @query window width <= 935
                                        {
                                            block.css('height', '42px');
                                        }
                block sell_button
                    class exchange-orange_button
                    css
                        height 60px
                    button button
                        html Sell Ticket
                        css
                            text-transform lowercase
                            height 46px
                            width 100%
                            font-size 24px
                            background-color #BF5700
                            border 1px solid #BA662F
                            border-radius 4px
                            letter-spacing 3.5px
                            color white
                            font-weight 400
                        :click
                            {
                                console.log("sell ticket");
                                var form = block.parent().sibling('form_wrap').child('form_content');
                                var event_id = '';
                                var event_obj = form.child('event').key('event');
                                if (event_obj) event_id = event_obj.id;
                                var price = form.child('two_wrap/price/input').node().value;
                                var seats = form.child('two_wrap/seats/input').node().value;
                                var comments = form.child('two_wrap/comments/input').node().value;
                                console.log(event_id, price, seats, comments);
                                if (event_id != '' && price != '' && seats != '') {
                                    window.ex.api.new_sell_order(price, seats, event_id, comments, _ => {
                                        setTimeout(_ => {
                                            window.ex.ui.child('right/panel/events').on('refresh');
                                            window.ex.ui.child('left/panel/events').on('refresh');
                                            window.ex.ui.child('right/panel/orders').on('refresh');
                                            window.ex.ui.child('left/panel/orders').on('refresh');
                                            block.parent().sibling('form_wrap').on('reset_fields');
                                        }, 100);
                                    });
                                }
                            }
            div orders
                css
                    width 100%
                    height 41%
                    display none
                :show
                    css
                        display block
                :hide
                    css
                        display none
                :refresh
                    {
                        console.log('loading sell orders');
                        window.ex.api.get_sell_orders((result, e) => {
                            if (result) {
                                if (result.orders) {
                                    console.log('reloaded sell_orders', result.orders);
                                    block.child('content').data({
                                        orders: result.orders
                                    });
                                    Block.queries();
                                    setTimeout(_ => {
                                        Block.queries();
                                    }, 50);
                                }
                            } else console.log(e);
                        });
                        event.stopPropagation();
                    }
                {
                    setTimeout(_ => {
                        block.on('refresh');
                    }, 20);
                }
                div title
                    css
                        padding-left 42px
                        text-align left
                    text text
                        val Orders
                        css
                            font-size 24px
                            letter-spacing 2px
                div content
                    class exchange-panel-content
                    #orders
                        {
                            block.html('');
                            if (orders.length == 0) {
                                var no_orders_placeholder_text = "No sell orders.";
                                block.add(Block('div', 'placeholder_wrap').css({fontStyle:'italic',paddingTop:'10px',opacity:'0.9'}).add(Block('text', 1).data(`${no_orders_placeholder_text}`)));
                            } else {
                                for (var o in orders) {
                                    var order_obj = JSON.parse(JSON.stringify(orders[o]));
                                    var event_obj = JSON.parse(JSON.stringify(order_obj.event_obj));
                                    delete order_obj['event_obj'];

                                    event_obj.event_id = event_obj._id;
                                    delete event_obj['_id'];
                                    event_obj.event_creator = event_obj.creator;
                                    delete event_obj['creator'];
                                    event_obj.event_ts_created = event_obj.ts_created;
                                    delete event_obj['ts_created'];
                                    event_obj.event_ts_updated = event_obj.ts_updated;
                                    delete event_obj['ts_updated'];
                                    event_obj.event_comments = event_obj.comments;
                                    delete event_obj['comments'];

                                    block.add(Block('order-item', `order_${orders[o]._id}`).data({mode:'sell'}).data(order_obj).data(event_obj));
                                }
                            }
                        }



                    